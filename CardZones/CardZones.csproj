<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{CC7789A8-FC42-48D3-B294-974A2EC01E6F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CardZones</RootNamespace>
    <AssemblyName>CardZones</AssemblyName>
    <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="netstandard" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="BepInEx">
      <HintPath Condition="Exists('$(GAME_PATH)')">$(GAME_PATH)\BepInEx\core\BepInEx.dll</HintPath>
      <HintPath Condition="Exists('$(R2MM_PATH)')">$(R2MM_PATH)\BepInEx\core\BepInEx.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="0Harmony">
      <HintPath Condition="Exists('$(GAME_PATH)')">$(GAME_PATH)\BepInEx\core\0Harmony.dll</HintPath>
      <HintPath Condition="Exists('$(R2MM_PATH)')">$(R2MM_PATH)\BepInEx\core\0Harmony.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="GameScripts">
      <HintPath>$(GAME_PATH)\Stacklands_Data\Managed\publicized_assemblies\GameScripts_publicized.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Assembly-CSharp-firstpass">
      <HintPath>$(GAME_PATH)\Stacklands_Data\Managed\publicized_assemblies\Assembly-CSharp-firstpass_publicized.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="ShapesRuntime">
      <HintPath>$(GAME_PATH)\Stacklands_Data\Managed\ShapesRuntime.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$(GAME_PATH)\Stacklands_Data\Managed\UnityEngine.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(GAME_PATH)\Stacklands_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>$(GAME_PATH)\Stacklands_Data\Managed\Unity.TextMeshPro.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>$(GAME_PATH)\Stacklands_Data\Managed\UnityEngine.InputLegacyModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CodeMatcherExtensions.cs" />
    <Compile Include="Mod.cs" />
    <Compile Include="Log.cs" />
    <Compile Include="Patches.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ZoneCard.cs" />
    <Compile Include="ZoneMaker.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <OUTPUT_NAME>CardZones</OUTPUT_NAME>
    <R2MM_PROFILE>Default</R2MM_PROFILE>
  </PropertyGroup>
  <PropertyGroup>
    <R2MM_PATH Condition="!Exists('$(R2MM_PATH)')">$(AppData)\r2modmanPlus-local\Stacklands\profiles\$(R2MM_PROFILE)</R2MM_PATH>
    <R2MM_PATH Condition="!Exists('$(R2MM_PATH)')">$(AppData)\Thunderstore Mod Manager\DataFolder\Stacklands\profiles\$(R2MM_PROFILE)</R2MM_PATH>
  </PropertyGroup>
  <Choose>
    <When Condition="($(OS) == 'Unix' OR $(OS) == 'OSX') AND $(GAME_PATH) == ''">
      <PropertyGroup>
        <GAME_PATH Condition="!Exists('$(GAME_PATH)')">$(HOME)/.steam/steam/steamapps/common/Stacklands</GAME_PATH>
        <GAME_PATH Condition="!Exists('$(GAME_PATH)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Stacklands/Contents/MacOS</GAME_PATH>
      </PropertyGroup>
    </When>
    <When Condition="($(OS) == 'Windows_NT') AND $(GAME_PATH) == ''">
      <PropertyGroup>
        <GAME_PATH Condition="!Exists('$(GAME_PATH)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 1948280', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GAME_PATH>
        <_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
        <GAME_PATH Condition="!Exists('$(GAME_PATH)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\Stacklands</GAME_PATH>
        <GAME_PATH Condition="!Exists('$(GAME_PATH)')">C:\Program Files\Steam\steamapps\common\Stacklands</GAME_PATH>
        <GAME_PATH Condition="!Exists('$(GAME_PATH)')">C:\Program Files (x86)\Steam\steamapps\common\Stacklands</GAME_PATH>
      </PropertyGroup>
    </When>
  </Choose>
  <PropertyGroup>
    <OUTPUT_PATH Condition="!Exists('$(OUTPUT_PATH)')">$(R2MM_PATH)/BepInEx/plugins</OUTPUT_PATH>
    <OUTPUT_PATH Condition="!Exists('$(OUTPUT_PATH)')">$(GAME_PATH)/BepInEx/plugins</OUTPUT_PATH>
    <FULL_OUTPUT_PATH>$(OUTPUT_PATH)/$(OUTPUT_NAME)</FULL_OUTPUT_PATH>
    <TMP_OUTPUT_PATH>$(TargetDir)/tmp</TMP_OUTPUT_PATH>
  </PropertyGroup>
  <Target Name="BeforeBuild">
    <Message Text="Game Path: $(GAME_PATH)" Importance="high" />
    <Message Text="R2MM Path: $(R2MM_PATH)" Importance="high" />
    <Message Text="Output Path: $(OUTPUT_PATH)" Importance="high" />
  </Target>
  <Target Name="AfterBuild">
    <RemoveDir Directories="$(TMP_OUTPUT_PATH)" />
    <MakeDir Directories="$(FULL_OUTPUT_PATH)" />
    <Copy SourceFiles="$(TargetDir)$(TargetFileName)" DestinationFolder="$(TMP_OUTPUT_PATH)" />
    <ZipDirectory Overwrite="true" SourceDirectory="$(TMP_OUTPUT_PATH)" DestinationFile="$(FULL_OUTPUT_PATH)/$(OUTPUT_NAME)-Nexus.zip" />
    <Copy SourceFiles="../manifest.json" DestinationFolder="$(TMP_OUTPUT_PATH)" />
    <Copy SourceFiles="../README.md" DestinationFolder="$(TMP_OUTPUT_PATH)" />
    <Copy SourceFiles="../icon.png" DestinationFolder="$(TMP_OUTPUT_PATH)" />
    <ZipDirectory Overwrite="true" SourceDirectory="$(TMP_OUTPUT_PATH)" DestinationFile="$(FULL_OUTPUT_PATH)/$(OUTPUT_NAME)-Thunderstore.zip" />
    <Unzip SourceFiles="$(FULL_OUTPUT_PATH)/$(OUTPUT_NAME)-Thunderstore.zip" DestinationFolder="$(FULL_OUTPUT_PATH)"/>
  </Target>
</Project>
